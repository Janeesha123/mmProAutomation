name: Selenium CI with Allure Report

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Install Chrome & ChromeDriver
      - name: Install Chrome & ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      # 4. Download previous Allure history (FIXED)
      - name: Download Allure History
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history
        continue-on-error: true

      # 5. Create results directory and copy history
      - name: Setup Allure Results Directory
        run: |
          mkdir -p target/allure-results
          if [ -d "allure-history" ]; then
            echo "Copying existing history to results directory"
            cp -r allure-history/* target/allure-results/ || echo "No history files to copy"
          else
            echo "No previous history found"
          fi

      # 6. Run Maven tests (ignore failures so report still generates)
      - name: Run Tests
        run: mvn clean test -Dmaven.test.failure.ignore=true

      # 7. Install Allure CLI
      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.26.0
          wget https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.tgz
          tar -zxvf allure-$ALLURE_VERSION.tgz -C $HOME/
          echo "$HOME/allure-$ALLURE_VERSION/bin" >> $GITHUB_PATH

      - name: Check Allure version
        run: allure --version

      # 8. Generate Allure report with history
      - name: Generate Allure Report with History
        run: |
          allure generate target/allure-results -o target/allure-report --clean

      # 9. Upload Allure report as GitHub artifact
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      # 10. Save history for next run (FIXED - correct path)
      - name: Upload Allure history for next run
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: target/allure-report/history
        if: always()

      # 11. Deploy Allure report to SLT server using rsync
      - name: Deploy Allure Report with rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: target/allure-report/
          remote_path: /var/www/html/selenium-report
          remote_host: ${{ secrets.SLT_HOST }}
          remote_user: ${{ secrets.SLT_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}